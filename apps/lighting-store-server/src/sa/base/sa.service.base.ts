/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SA as PrismaSA } from "@prisma/client";

export class SAServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SACountArgs, "select">): Promise<number> {
    return this.prisma.sa.count(args);
  }

  async sas(args: Prisma.SAFindManyArgs): Promise<PrismaSA[]> {
    return this.prisma.sa.findMany(args);
  }
  async sa(args: Prisma.SAFindUniqueArgs): Promise<PrismaSA | null> {
    return this.prisma.sa.findUnique(args);
  }
  async createSA(args: Prisma.SACreateArgs): Promise<PrismaSA> {
    return this.prisma.sa.create(args);
  }
  async updateSA(args: Prisma.SAUpdateArgs): Promise<PrismaSA> {
    return this.prisma.sa.update(args);
  }
  async deleteSA(args: Prisma.SADeleteArgs): Promise<PrismaSA> {
    return this.prisma.sa.delete(args);
  }
}
